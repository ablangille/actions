name: "SonarQube Analyzer NET"
description: "Se realiza el an√°lisis en sonarqube para NET"
inputs:
  github_username:
    description: "usuario de github para autenticarse en los packages"
    required: true
  github_token:
    description: "token del usuario con permisos de lectura en packages"
    required: true
  workdir_src:
    description: "directorio donde se encuentra el project a compilar DEFAULT: ./"
    required: false
    default: "./"
  workdir_test:
    description: "directorio donde se encuentra los test DEFAULT: ./"
    required: false
    default: "./"
  sonar_url:
    description: "url sonarqube"
    required: true
  sonar_token:
    description: "token sonarqube"
    required: true
  sonar_key:
    description: "Key del repositorio"
    required: true
  sonar_custom:
    decription: "config sonar custom"
    default: ""
  submodule_url:
    decription: "Git submodule url with credentials"
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11

    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          2.1.x
          3.1.x
          5.0.x
          6.0.x
    - name: Cache SonarQube packages
      uses: actions/cache@v1
      with:
        path: ~/sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarQube scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: ${{ inputs.workdir_src }}/.sonar/scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
    - name: Sonarqube Begin
      working-directory: ${{ inputs.workdir_src }}
      run: |
        dotnet nuget locals -c all
        dotnet nuget add source https://nuget.pkg.github.com/architecture-it/index.json --name github -u ${{ inputs.github_username }} -p ${{ inputs.github_token }} --store-password-in-clear-text
        dotnet tool install --global dotnet-sonarscanner
        dotnet sonarscanner begin /key:"${{ inputs.sonar_key }}" -d:sonar.login="${{ inputs.sonar_token }}" -d:sonar.host.url="${{ inputs.sonar_url }}" -d:sonar.cs.vstest.reportsPaths=**/*.trx -d:sonar.cs.opencover.reportsPaths=**/coverage.opencover.xml ${{ inputs.sonar_custom}}
      shell: bash

    - name: Pull submodules
      working-directory: ${{ inputs.workdir_src }}
      run: |
        git submodule init
        git config submodule.DMS.Pickup.Commons.url ${{ inputs.submodule_url }}
        git submodule update --recursive --remote
      shell: bash

    - name: Restore
      working-directory: ${{ inputs.workdir_src }}
      run: dotnet restore
      shell: bash

    - name: Build
      working-directory: ${{ inputs.workdir_src }}
      run: dotnet build
      shell: bash

    - name: Sonarqube End
      working-directory: ${{ inputs.workdir_src }}
      run: dotnet sonarscanner end -d:sonar.login="${{ inputs.sonar_token }}"
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
